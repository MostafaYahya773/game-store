*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

/*
! tailwindcss v3.4.17 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden]:where(:not([hidden="until-found"])) {
  display: none;
}

:root,
[data-theme] {
  background-color: var(--fallback-b1,oklch(var(--b1)/1));
  color: var(--fallback-bc,oklch(var(--bc)/1));
}

@supports not (color: oklch(0 0 0)) {
  :root {
    color-scheme: light;
    --fallback-p: #491eff;
    --fallback-pc: #d4dbff;
    --fallback-s: #ff41c7;
    --fallback-sc: #fff9fc;
    --fallback-a: #00cfbd;
    --fallback-ac: #00100d;
    --fallback-n: #2b3440;
    --fallback-nc: #d7dde4;
    --fallback-b1: #ffffff;
    --fallback-b2: #e5e6e6;
    --fallback-b3: #e5e6e6;
    --fallback-bc: #1f2937;
    --fallback-bs: #1f2937;
    --fallback-in: #00b3f0;
    --fallback-inc: #000000;
    --fallback-su: #00ca92;
    --fallback-suc: #000000;
    --fallback-wa: #ffc22d;
    --fallback-wac: #000000;
    --fallback-er: #ff6f70;
    --fallback-erc: #000000;
  }

  @media (prefers-color-scheme: dark) {
    :root {
      color-scheme: dark;
      --fallback-p: #7582ff;
      --fallback-pc: #050617;
      --fallback-s: #ff71cf;
      --fallback-sc: #190211;
      --fallback-a: #00c7b5;
      --fallback-ac: #000e0c;
      --fallback-n: #2a323c;
      --fallback-nc: #a6adbb;
      --fallback-b1: #1d232a;
      --fallback-b2: #191e24;
      --fallback-b3: #15191e;
      --fallback-bc: #a6adbb;
      --fallback-bs: #989eab;
      --fallback-in: #00b3f0;
      --fallback-inc: #000000;
      --fallback-su: #00ca92;
      --fallback-suc: #000000;
      --fallback-wa: #ffc22d;
      --fallback-wac: #000000;
      --fallback-er: #ff6f70;
      --fallback-erc: #000000;
    }
  }
}

html {
  -webkit-tap-highlight-color: transparent;
}

[class*="icon-[tabler--"] {
  display: inline-block;
  width: 1rem;
  height: 1rem;
  background-color: currentColor;
  -webkit-mask-image: var(--svg);
  mask-image: var(--svg);
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-size: 100% 100%;
  mask-size: 100% 100%;
}

.icon-\[tabler--chevron-down\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m6 9l6 6l6-6'/%3E%3C/svg%3E");
}

.icon-\[tabler--chevron-left\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m15 6l-6 6l6 6'/%3E%3C/svg%3E");
}

.icon-\[tabler--chevron-right\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m9 6l6 6l-6 6'/%3E%3C/svg%3E");
}

:root {
  color-scheme: light;
  --rounded-box: 0.5rem ;
  --rounded-btn: 0.375rem;
  --rounded-tooltip: 0.25rem;
  --animation-btn: 0.25s;
  --animation-input: .2s;
  --btn-focus-scale: 0.95;
  --border-btn: 1px;
  --tab-border: 1px;
  --tab-radius: 0.5rem;
  --p: 57.5934% 0.247012 287.240256;
  --pc: 93.7482% 0.032368 291.504163;
  --s: 55.7871% 0.022138 301.905408;
  --sc: 95.0453% 0.002858 308.427423;
  --a: 62.3083% 0.188015 259.814527;
  --ac: 93.1918% 0.031591 255.585479;
  --n: 40.6559% 0.025056 282.210785;
  --nc: 97.6419% 0.001323 286.375536;
  --b1: 100% 0 0;
  --b2: 94.7244% 0.005338 286.297402;
  --b3: 88.6277% 0.008239 278.622785;
  --bc: 37.567% 0.022158 281.800147;
  --bs: 37.567% 0.022158 281.800147;
  --in: 71.4837% 0.125737 215.220903;
  --inc: 95.6262% 0.044329 203.387778;
  --su: 73.1062% 0.216656 147.043973;
  --suc: 96.444% 0.02867 172.082912;
  --wa: 79.8713% 0.164239 73.09399;
  --wac: 98.4165% 0.02418 94.061776;
  --er: 65.3932% 0.222085 25.863858;
  --erc: 97.5752% 0.015143 61.349242;
}

@media (prefers-color-scheme: dark) {
  :root {
    color-scheme: dark;
    --rounded-box: 0.5rem ;
    --rounded-btn: 0.375rem;
    --rounded-tooltip: 0.25rem;
    --animation-btn: 0.25s;
    --animation-input: .2s;
    --btn-focus-scale: 0.95;
    --border-btn: 1px;
    --tab-border: 1px;
    --tab-radius: 0.5rem;
    --p: 57.5934% 0.247012 287.240256;
    --pc: 93.7482% 0.032368 291.504163;
    --s: 55.7871% 0.022138 301.905408;
    --sc: 100% 0 0;
    --a: 62.3083% 0.188015 259.814527;
    --ac: 93.1918% 0.031591 255.585479;
    --n: 65.7482% 0.022235 294.952787;
    --nc: 18.5128% 0.016696 301.919165;
    --b1: 26.8442% 0.028285 299.769973;
    --b2: 22.6865% 0.023344 295.952775;
    --b3: 39.9632% 0.030791 300.243852;
    --bc: 78.094% 0.014175 295.24394;
    --bs: 18.5128% 0.016696 301.919165;
    --in: 71.4837% 0.125737 215.220903;
    --inc: 95.6262% 0.044329 203.387778;
    --su: 73.1062% 0.216656 147.043973;
    --suc: 96.444% 0.02867 172.082912;
    --wa: 79.8713% 0.164239 73.09399;
    --wac: 98.4165% 0.02418 94.061776;
    --er: 65.3932% 0.222085 25.863858;
    --erc: 97.5752% 0.015143 61.349242;
  }
}

[data-theme=light] {
  color-scheme: light;
  --rounded-box: 0.5rem ;
  --rounded-btn: 0.375rem;
  --rounded-tooltip: 0.25rem;
  --animation-btn: 0.25s;
  --animation-input: .2s;
  --btn-focus-scale: 0.95;
  --border-btn: 1px;
  --tab-border: 1px;
  --tab-radius: 0.5rem;
  --p: 57.5934% 0.247012 287.240256;
  --pc: 93.7482% 0.032368 291.504163;
  --s: 55.7871% 0.022138 301.905408;
  --sc: 95.0453% 0.002858 308.427423;
  --a: 62.3083% 0.188015 259.814527;
  --ac: 93.1918% 0.031591 255.585479;
  --n: 40.6559% 0.025056 282.210785;
  --nc: 97.6419% 0.001323 286.375536;
  --b1: 100% 0 0;
  --b2: 94.7244% 0.005338 286.297402;
  --b3: 88.6277% 0.008239 278.622785;
  --bc: 37.567% 0.022158 281.800147;
  --bs: 37.567% 0.022158 281.800147;
  --in: 71.4837% 0.125737 215.220903;
  --inc: 95.6262% 0.044329 203.387778;
  --su: 73.1062% 0.216656 147.043973;
  --suc: 96.444% 0.02867 172.082912;
  --wa: 79.8713% 0.164239 73.09399;
  --wac: 98.4165% 0.02418 94.061776;
  --er: 65.3932% 0.222085 25.863858;
  --erc: 97.5752% 0.015143 61.349242;
}

[data-theme=dark] {
  color-scheme: dark;
  --rounded-box: 0.5rem ;
  --rounded-btn: 0.375rem;
  --rounded-tooltip: 0.25rem;
  --animation-btn: 0.25s;
  --animation-input: .2s;
  --btn-focus-scale: 0.95;
  --border-btn: 1px;
  --tab-border: 1px;
  --tab-radius: 0.5rem;
  --p: 57.5934% 0.247012 287.240256;
  --pc: 93.7482% 0.032368 291.504163;
  --s: 55.7871% 0.022138 301.905408;
  --sc: 100% 0 0;
  --a: 62.3083% 0.188015 259.814527;
  --ac: 93.1918% 0.031591 255.585479;
  --n: 65.7482% 0.022235 294.952787;
  --nc: 18.5128% 0.016696 301.919165;
  --b1: 26.8442% 0.028285 299.769973;
  --b2: 22.6865% 0.023344 295.952775;
  --b3: 39.9632% 0.030791 300.243852;
  --bc: 78.094% 0.014175 295.24394;
  --bs: 18.5128% 0.016696 301.919165;
  --in: 71.4837% 0.125737 215.220903;
  --inc: 95.6262% 0.044329 203.387778;
  --su: 73.1062% 0.216656 147.043973;
  --suc: 96.444% 0.02867 172.082912;
  --wa: 79.8713% 0.164239 73.09399;
  --wac: 98.4165% 0.02418 94.061776;
  --er: 65.3932% 0.222085 25.863858;
  --erc: 97.5752% 0.015143 61.349242;
}

html {
  font-family: 'Proxima Nova', system-ui, sans-serif;
}

.avatar.placeholder > div {
  display: flex;
  align-items: center;
  justify-content: center;
}

.btn {
  display: inline-flex;
  height: 2.375rem;
  min-height: 2.375rem;
  flex-shrink: 0;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  padding-left: 1rem;
  padding-right: 1rem;
  font-size: 1rem;
  line-height: 1.375rem;
  font-weight: 500;
  gap: 0.5rem;
  border-radius: var(--rounded-btn, 0.375rem);
  border-color: currentColor;
  border-color: oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity));
  text-decoration-line: none;
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  border-width: var(--border-btn, 1px);
  transition-property: color, background-color, border-color, opacity, box-shadow, transform;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  --tw-shadow: 0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));
  --tw-shadow-colored: 0 2px 4px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  outline-color: var(--fallback-bc,oklch(var(--bc)/1));
  background-color: oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity));
  --tw-bg-opacity: 1;
  --tw-border-opacity: 1;
}

.btn-disabled,
  .btn[disabled],
  .btn:disabled {
  pointer-events: none;
}

:where(.btn:is(input[type="checkbox"])),
:where(.btn:is(input[type="radio"])) {
  width: auto;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}

.btn:is(input[type="checkbox"]):after,
.btn:is(input[type="radio"]):after {
  --tw-content: attr(aria-label);
  content: var(--tw-content);
}

.card {
  position: relative;
  display: flex;
  flex-direction: column;
  border-radius: var(--rounded-box, 0.5rem);
  border-color: var(--fallback-bc,oklch(var(--bc)/0.4));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
  box-shadow: var(--card-shadow, 0px 2px 4px 0px oklch(var(--bs) / 0.26));
  border-width: var(--card-border, 0px);
}

.card:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.card-body {
  display: flex;
  flex: 1 1 auto;
  flex-direction: column;
  font-size: 1rem;
  line-height: 1.375rem;
  font-weight: 400;
  padding: var(--padding-card, 1.5rem);
}

.card-actions {
  display: flex;
  flex-wrap: wrap;
  align-items: flex-start;
  gap: 0.75rem;
}

.card-title {
  font-size: 1.5rem;
  line-height: 2rem;
  font-weight: 600;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.card figure {
  display: flex;
  align-items: center;
  justify-content: center;
}

.card.image-full {
  display: grid;
}

.card.image-full:before {
  position: relative;
  content: "";
  z-index: 10;
  border-radius: var(--rounded-box, 0.5rem);
  background-image: linear-gradient(0deg, rgba(0, 0, 0, 0.58) 0%, rgba(0, 0, 0, 0.58) 100%);
}

.card.image-full:before,
    .card.image-full > * {
  grid-column-start: 1;
  grid-row-start: 1;
}

.card.image-full > figure img {
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}

.card.image-full > .card-body {
  position: relative;
  z-index: 20;
  --tw-text-opacity: 1;
  color: var(--fallback-nc,oklch(var(--nc)/var(--tw-text-opacity, 1)));
}

:where(.card figure > *) {
  width: 100%;
}

.card-group > .card {
  flex: 1 0 0%;
  border-radius: 0px;
  --card-shadow: none;
  --card-border: 0;
}

.carousel {
  position: relative;
  width: 100%;
  overflow: hidden;
  border-radius: 1rem;
}

.carousel-body {
  display: flex;
  flex-wrap: nowrap;
}

.carousel-prev,
.carousel-next {
  position: absolute;
  top: 0px;
  bottom: 0px;
  display: inline-flex;
  height: 100%;
  width: 10%;
  align-items: center;
  justify-content: center;
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}

@media not all and (min-width: 640px) {
  .carousel-prev,
.carousel-next {
    width: 18%;
  }
}

.carousel-prev {
  inset-inline-start: 0px;
  border-start-start-radius: 1rem;
  border-end-start-radius: 1rem;
}

.carousel-next {
  inset-inline-end: 0px;
  border-start-end-radius: 1rem;
  border-end-end-radius: 1rem;
}

.carousel-box {
  height: 0.25rem;
  width: 2.5rem;
  cursor: pointer;
  background-color: var(--fallback-n,oklch(var(--n)/0.3));
}

.active.carousel-box {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

.active .carousel-box {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

.active.carousel-dot {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

.active .carousel-dot {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

.collapse:not(td):not(tr):not(colgroup) {
  visibility: visible;
}

.dropdown-menu {
  z-index: 10;
  margin-top: 0.5rem;
  text-wrap: nowrap;
  padding: 0.5rem;
  font-size: 1rem;
  line-height: 1.375rem;
  opacity: 0;
  transition-property: opacity,margin;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
  border-radius: var(--rounded-box, 0.5rem);
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  --tw-shadow: 0 10px 15px -2px var(--fallback-bs,oklch(var(--bs)/0.34));
  --tw-shadow-colored: 0 10px 15px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.dropdown-item {
  clear: both;
  display: flex;
  width: 100%;
  align-items: center;
  -moz-column-gap: 0.5rem;
       column-gap: 0.5rem;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
  text-align: inherit;
  border-radius: var(--rounded-btn, 0.375rem);
  background-color: transparent;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  text-decoration-line: none;
  text-decoration-thickness: 0px;
}

.dropdown-header,
.dropdown-footer {
  position: static;
  display: flex;
  align-items: center;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}

.dropdown-header {
  margin: -0.5rem;
  margin-bottom: 0.5rem;
  border-top-left-radius: var(--rounded-box, 0.5rem);
  border-top-right-radius: var(--rounded-box, 0.5rem);
  border-bottom-width: 1px;
}

.footer {
  display: grid;
  width: 100%;
  grid-auto-flow: row;
  place-items: start;
  -moz-column-gap: 1rem;
       column-gap: 1rem;
  row-gap: 2.5rem;
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}

.footer > * {
  display: grid;
  place-items: start;
  gap: 0.75rem;
}

@media (min-width: 48rem) {
  .footer {
    grid-auto-flow: column;
  }

  .footer-center {
    grid-auto-flow: row dense;
  }
}

.input {
  height: 2.375rem;
  width: 100%;
  flex-shrink: 1;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  font-size: 1rem;
  line-height: 1.375rem;
  font-weight: 400;
  border-radius: var(--rounded-btn, 0.375rem);
  border-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.4));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
  transition: border-color 0.15s ease-in-out,
    box-shadow 0.15s ease-in-out;
}

.input::file-selector-button {
  margin-inline-end: 1rem;
  display: inline-flex;
  height: 100%;
  flex-shrink: 0;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  padding-left: 1rem;
  padding-right: 1rem;
  text-align: center;
  font-size: 0.875rem;
  line-height: 1.25rem;
  line-height: 1em;
  border-start-start-radius: var(--rounded-btn, 0.375rem);
  border-end-start-radius: var(--rounded-btn, 0.375rem);
  border-width: 0px;
  background-color: var(--fallback-bc,oklch(var(--bc)/0.2));
  font-weight: 600;
  text-transform: uppercase;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  text-decoration-line: none;
}

.input[type="number"]::-webkit-inner-spin-button {
  margin-top: -0.25rem;
  margin-bottom: -0.25rem;
  margin-inline-end: -0.25rem;
}

.input[type="file"] {
  padding-left: 0px;
  padding-right: 0px;
}

.link {
  display: inline-block;
  cursor: pointer;
  text-decoration-line: underline;
}

@media (hover:hover) {
  .menu li:not(.disabled, :disabled, [disabled]) > :not(ul, .menu-title, .collapse, .btn):active,
.menu li:not(.disabled, :disabled, [disabled]) > :not(ul, .menu-title, .collapse, .btn).active {
    background-color: var(--fallback-p,oklch(var(--p)/0.1));
    --tw-text-opacity: 1;
    color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
  }
}

.menu {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  gap: 0.125rem;
  border-radius: var(--rounded-box, 0.5rem);
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  padding: 0.5rem;
}

.menu :where(li ul) {
  position: relative;
  white-space: nowrap;
}

.menu :where(li:not(.menu-title) > *:not(ul, .collapse, .menu-title, .btn)) {
  display: grid;
  grid-auto-flow: column;
  align-content: flex-start;
  align-items: center;
  gap: 0.5rem;
  grid-auto-columns: minmax(auto, max-content) auto max-content;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

.menu :where(li > .menu-dropdown:not(.menu-dropdown-show)) {
  display: none;
}

:where(.menu li) {
  position: relative;
  display: flex;
  flex-shrink: 0;
  flex-direction: column;
  flex-wrap: wrap;
  align-items: stretch;
}

:where(.menu li) .badge {
  justify-self: end;
}

.swap {
  position: relative;
  display: inline-grid;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  place-content: center;
  cursor: pointer;
}

.swap > * {
  grid-column-start: 1;
  grid-row-start: 1;
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-property: transform, opacity;
}

.swap input {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}

.swap .swap-on,
.swap .swap-indeterminate,
.swap input:indeterminate ~ .swap-on {
  opacity: 0;
}

.swap input:checked ~ .swap-off,
.swap-active .swap-off,
.swap input:indeterminate ~ .swap-off {
  opacity: 0;
}

.swap input:checked ~ .swap-on,
.swap-active .swap-on,
.swap input:indeterminate ~ .swap-indeterminate {
  opacity: 1;
}

.advance-select-option.active,
  .advance-select-option:active {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.avatar-group :where(.avatar).placeholder > div {
  border-radius: 9999px;
  border-width: 2px;
  --tw-border-opacity: 1;
  border-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-border-opacity, 1)));
}

@media (prefers-reduced-motion: no-preference) {
  .btn {
    animation: button-pop var(--animation-btn, 0.25s) ease-out;
  }
}

.btn:active:hover,
  .btn:active:focus {
  animation: button-pop 0s ease-out;
  transform: scale(var(--btn-focus-scale, 0.97));
}

@supports not (color: oklch(0% 0 0)) {
  .btn {
    background-color: var(--btn-color, var(--fallback-b2));
    border-color: var(--btn-color, var(--fallback-b2));
  }

  .btn:focus-visible {
    background-color: var(--btn-color, var(--fallback-b2));
    border-color: var(--btn-color, var(--fallback-b2));
  }

  .btn-primary {
    --btn-color: var(--fallback-p);
  }

  .btn-secondary {
    --btn-color: var(--fallback-s);
  }
}

@media (hover: hover) {
  .btn:hover {
    --tw-shadow: 0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));
    --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }

  @supports (color: color-mix(in oklab, black, black)) {
    .btn:hover {
      background-color: color-mix(
            in oklab,
            oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity, 1)) 90%,
            black
          );
      border-color: color-mix(
            in oklab,
            oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity, 1)) 90%,
            black
          );
    }
  }

  @supports not (color: oklch(0% 0 0)) {
    .btn:hover {
      background-color: var(--btn-color, var(--fallback-b2));
      border-color: var(--btn-color, var(--fallback-b2));
    }
  }

  .btn.glass:hover {
    --glass-opacity: 25%;
    --glass-border-opacity: 15%;
  }

  .btn-soft:hover {
    background-color: var(--fallback-n,oklch(var(--n)/0.3));
  }

  .btn-soft.btn-primary:hover {
    background-color: var(--fallback-p,oklch(var(--p)/0.3));
  }

  .btn-soft.btn-secondary:hover {
    background-color: var(--fallback-s,oklch(var(--s)/0.3));
  }

  .btn-soft.btn-accent:hover {
    background-color: var(--fallback-a,oklch(var(--a)/0.3));
  }

  .btn-soft.btn-success:hover {
    background-color: var(--fallback-su,oklch(var(--su)/0.3));
  }

  .btn-soft.btn-info:hover {
    background-color: var(--fallback-in,oklch(var(--in)/0.3));
  }

  .btn-soft.btn-warning:hover {
    background-color: var(--fallback-wa,oklch(var(--wa)/0.3));
  }

  .btn-soft.btn-error:hover {
    background-color: var(--fallback-er,oklch(var(--er)/0.3));
  }

  .btn-outline.btn-primary:hover {
    --tw-border-opacity: 1;
    border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-p,oklch(var(--p)/0.1));
  }

  .btn-outline.btn-secondary:hover {
    --tw-border-opacity: 1;
    border-color: var(--fallback-s,oklch(var(--s)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-s,oklch(var(--s)/0.1));
  }

  .btn-text.btn-primary:hover {
    background-color: var(--fallback-p,oklch(var(--p)/0.1));
  }

  .btn-text.btn-secondary:hover {
    background-color: var(--fallback-s,oklch(var(--s)/0.1));
  }

  .btn-disabled:hover,
    .btn[disabled]:hover,
    .btn.disabled:hover,
    .btn:disabled:hover {
    opacity: 0.5;
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }

  @supports (color: color-mix(in oklab, black, black)) {
    .btn:is(input[type="checkbox"]:checked):hover, .btn:is(input[type="radio"]:checked):hover {
      background-color: color-mix(in oklab, var(--fallback-p,oklch(var(--p)/1)) 90%, black);
      border-color: color-mix(in oklab, var(--fallback-p,oklch(var(--p)/1)) 90%, black);
    }
  }

  :where(.menu li:not(.menu-title, .disabled, [disabled], :disabled) > *:not(ul, .collapse, .menu-title)):not(.active, .btn, .disabled, :disabled, [disabled]):hover {
    cursor: pointer;
    outline: 2px solid transparent;
    outline-offset: 2px;
  }

  @supports (color: oklch(0 0 0)) {
    :where(.menu li:not(.menu-title, .disabled, [disabled], :disabled) > *:not(ul, .collapse, .menu-title)):not(.active, .btn, .disabled, :disabled, [disabled]):hover {
      background-color: var(--fallback-n,oklch(var(--n)/0.1));
    }
  }
}

@supports (color: color-mix(in oklab, black, black)) {
  .btn:focus-visible {
    background-color: color-mix(in oklab, oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity, 1)) 90%, black);
    border-color: color-mix(in oklab, oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity, 1)) 90%, black);
  }
}

.btn:focus-visible {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 0px;
}

.btn-primary {
  --tw-text-opacity: 1;
  color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-p,oklch(var(--p)/0.3));
}

@supports (color: oklch(0% 0 0)) {
  .btn-primary {
    --btn-color: var(--p);
  }

  .btn-secondary {
    --btn-color: var(--s);
  }

  .btn-gradient.btn-primary {
    --light-shade: var(--p);
  }

  .btn-gradient.btn-secondary {
    --light-shade: var(--s);
  }
}

.btn-secondary {
  --tw-text-opacity: 1;
  color: var(--fallback-sc,oklch(var(--sc)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-s,oklch(var(--s)/0.3));
}

.btn.glass {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  outline-color: currentColor;
}

.btn.glass:hover {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.btn.glass.btn-active {
  --glass-opacity: 25%;
  --glass-border-opacity: 15%;
}

.btn-soft {
  border-style: none;
  background-color: var(--fallback-n,oklch(var(--n)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.btn-soft:hover {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.btn-soft.btn-active {
  background-color: var(--fallback-n,oklch(var(--n)/0.3));
}

.btn-soft:focus-visible {
  background-color: var(--fallback-n,oklch(var(--n)/0.3));
  outline-color: var(--fallback-n,oklch(var(--n)/0.5));
}

.btn-soft.btn-primary {
  background-color: var(--fallback-p,oklch(var(--p)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-p,oklch(var(--p)/0.5));
}

.btn-soft.btn-primary.btn-active {
  background-color: var(--fallback-p,oklch(var(--p)/0.3));
}

.btn-soft.btn-primary:focus-visible {
  background-color: var(--fallback-p,oklch(var(--p)/0.3));
  outline-color: var(--fallback-p,oklch(var(--p)/0.5));
}

.btn-soft.btn-secondary {
  background-color: var(--fallback-s,oklch(var(--s)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-s,oklch(var(--s)/0.5));
}

.btn-soft.btn-secondary.btn-active {
  background-color: var(--fallback-s,oklch(var(--s)/0.3));
}

.btn-soft.btn-secondary:focus-visible {
  background-color: var(--fallback-s,oklch(var(--s)/0.3));
  outline-color: var(--fallback-s,oklch(var(--s)/0.5));
}

.btn-soft.btn-accent {
  background-color: var(--fallback-a,oklch(var(--a)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-a,oklch(var(--a)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-a,oklch(var(--a)/0.5));
}

.btn-soft.btn-accent.btn-active {
  background-color: var(--fallback-a,oklch(var(--a)/0.3));
}

.btn-soft.btn-accent:focus-visible {
  background-color: var(--fallback-a,oklch(var(--a)/0.3));
  outline-color: var(--fallback-a,oklch(var(--a)/0.5));
}

.btn-soft.btn-success {
  background-color: var(--fallback-su,oklch(var(--su)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-su,oklch(var(--su)/0.5));
}

.btn-soft.btn-success.btn-active {
  background-color: var(--fallback-su,oklch(var(--su)/0.3));
}

.btn-soft.btn-success:focus-visible {
  background-color: var(--fallback-su,oklch(var(--su)/0.3));
  outline-color: var(--fallback-su,oklch(var(--su)/0.5));
}

.btn-soft.btn-info {
  background-color: var(--fallback-in,oklch(var(--in)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-in,oklch(var(--in)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-in,oklch(var(--in)/0.5));
}

.btn-soft.btn-info.btn-active {
  background-color: var(--fallback-in,oklch(var(--in)/0.3));
}

.btn-soft.btn-info:focus-visible {
  background-color: var(--fallback-in,oklch(var(--in)/0.3));
  outline-color: var(--fallback-in,oklch(var(--in)/0.5));
}

.btn-soft.btn-warning {
  background-color: var(--fallback-wa,oklch(var(--wa)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-wa,oklch(var(--wa)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-wa,oklch(var(--wa)/0.5));
}

.btn-soft.btn-warning.btn-active {
  background-color: var(--fallback-wa,oklch(var(--wa)/0.3));
}

.btn-soft.btn-warning:focus-visible {
  background-color: var(--fallback-wa,oklch(var(--wa)/0.3));
  outline-color: var(--fallback-wa,oklch(var(--wa)/0.5));
}

.btn-soft.btn-error {
  background-color: var(--fallback-er,oklch(var(--er)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-er,oklch(var(--er)/0.5));
}

.btn-soft.btn-error.btn-active {
  background-color: var(--fallback-er,oklch(var(--er)/0.3));
}

.btn-soft.btn-error:focus-visible {
  background-color: var(--fallback-er,oklch(var(--er)/0.3));
  outline-color: var(--fallback-er,oklch(var(--er)/0.5));
}

.btn-outline.btn-primary {
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.btn-outline.btn-primary.btn-active {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
}

.btn-outline.btn-primary:focus-visible {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
}

.btn-outline.btn-secondary {
  --tw-text-opacity: 1;
  color: var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity, 1)));
}

.btn-outline.btn-secondary.btn-active {
  --tw-border-opacity: 1;
  border-color: var(--fallback-s,oklch(var(--s)/var(--tw-border-opacity, 1)));
  background-color: var(--fallback-s,oklch(var(--s)/0.1));
}

.btn-outline.btn-secondary:focus-visible {
  background-color: var(--fallback-s,oklch(var(--s)/0.1));
}

.btn-text.btn-primary {
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.btn-text.btn-primary.btn-active {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
}

.btn-text.btn-primary:focus-visible {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
}

.btn-text.btn-secondary {
  --tw-text-opacity: 1;
  color: var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity, 1)));
}

.btn-text.btn-secondary.btn-active {
  background-color: var(--fallback-s,oklch(var(--s)/0.1));
}

.btn-text.btn-secondary:focus-visible {
  background-color: var(--fallback-s,oklch(var(--s)/0.1));
}

.btn-gradient.btn-primary {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity, 1)));
  --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.26));
  --tw-shadow: var(--tw-shadow-colored);
}

.btn-gradient.btn-primary:hover {
  --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.2));
  --tw-shadow: var(--tw-shadow-colored);
}

.btn-gradient.btn-primary:focus-visible {
  outline-color: var(--fallback-p,oklch(var(--p)/0.3));
  border-color: transparent;
}

.btn-gradient.btn-secondary {
  --tw-border-opacity: 1;
  border-color: var(--fallback-s,oklch(var(--s)/var(--tw-border-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-sc,oklch(var(--sc)/var(--tw-text-opacity, 1)));
  --tw-shadow-color: var(--fallback-s,oklch(var(--s)/0.26));
  --tw-shadow: var(--tw-shadow-colored);
}

.btn-gradient.btn-secondary:hover {
  --tw-shadow-color: var(--fallback-s,oklch(var(--s)/0.2));
  --tw-shadow: var(--tw-shadow-colored);
}

.btn-gradient.btn-secondary:focus-visible {
  outline-color: var(--fallback-s,oklch(var(--s)/0.3));
  border-color: transparent;
}

.btn.btn-disabled,
  .btn.disabled,
  .btn[disabled],
  .btn:disabled {
  pointer-events: none;
  opacity: 0.5;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.btn:is(input[type="checkbox"]:checked),
.btn:is(input[type="radio"]:checked) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity, 1)));
}

.btn:is(input[type="checkbox"]:checked):focus-visible, .btn:is(input[type="radio"]:checked):focus-visible {
  outline-color: var(--fallback-p,oklch(var(--p)/1));
}

@keyframes button-pop {
  0% {
    transform: scale(var(--btn-focus-scale, 0.98));
  }

  40% {
    transform: scale(1.02);
  }

  100% {
    transform: scale(1);
  }
}

.card :where(figure:first-child) {
  overflow: hidden;
  border-start-start-radius: inherit;
  border-start-end-radius: inherit;
  border-end-start-radius: unset;
  border-end-end-radius: unset;
}

.card :where(figure:last-child) {
  overflow: hidden;
  border-start-start-radius: unset;
  border-start-end-radius: unset;
  border-end-start-radius: inherit;
  border-end-end-radius: inherit;
}

.card.image-full :where(figure) {
  overflow: hidden;
  border-radius: inherit;
}

.card .alert {
  border-radius: 0px;
}

.card .alert:first-child {
  border-top-left-radius: var(--rounded-box, 0.5rem);
  border-top-right-radius: var(--rounded-box, 0.5rem);
}

.card .alert:last-child {
  border-bottom-right-radius: var(--rounded-box, 0.5rem);
  border-bottom-left-radius: var(--rounded-box, 0.5rem);
}

:where(.card-header) + .card-body {
  padding-top: 0;
}

:where(.card-body) + .card-footer {
  padding-top: 0;
}

.carousel-body,
.carousel-slide {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 700ms;
}

.carousel-prev:hover,
.carousel-next:hover {
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.carousel-prev.disabled,
.carousel-next.disabled {
  pointer-events: none;
  color: var(--fallback-bc,oklch(var(--bc)/0.3));
}

@keyframes checkmark {
  0% {
    background-position-y: 5px;
  }

  50% {
    background-position-y: -2px;
  }

  100% {
    background-position-y: 0;
  }
}

.nested-collapse-wrapper .collapse.open.nested-collapse,
.nested-collapse-wrapper .collapse-toggle.open.nested-collapse {
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}

.nested-collapse-wrapper .collapse.open > .collapse-icon,
.nested-collapse-wrapper .collapse-toggle.open > .collapse-icon {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.dropdown-menu > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.125rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.125rem * var(--tw-space-y-reverse));
}

.dropdown-item:hover,
  .dropdown-item:focus,
  .dropdown-item:focus-within,
  .dropdown-item:focus-visible {
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.dropdown-item.active,
  .dropdown-item:active {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.dropdown-item.disabled,
  .dropdown-item:disabled,
  .dropdown-item[disabled] {
  pointer-events: none;
  background-color: var(--fallback-n,oklch(var(--n)/0.05));
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.dropdown-item > .label {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
  font-size: 1rem;
  line-height: 1.375rem;
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}

.dropdown-item > .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

input {
  background-color: transparent;
}

input:focus {
  outline-width: 0px;
  outline-color: transparent;
}

input:focus-visible {
  outline: unset;
}

.input::-moz-placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.input::placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.input:hover {
  border-color: var(--fallback-bc,oklch(var(--bc)/0.6));
}

.input[type="file"]:disabled {
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
}

.input:focus,
  .input:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.22));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity, 1)));
}

.input:-webkit-autofill,
  .input:-webkit-autofill:focus {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.input[list]::-webkit-calendar-picker-indicator {
  line-height: 1em;
}

.input.disabled,
  .input:disabled,
  .input[disabled] {
  pointer-events: none;
  border-width: 0px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.input::-webkit-date-and-time-value {
  text-align: inherit;
}

.input.input-floating.disabled,
    .input.input-floating:disabled,
    .input.input-floating[disabled] {
  border-width: 1px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

.input.input-floating.disabled ~ .input-floating-label, .input.input-floating:disabled ~ .input-floating-label, .input.input-floating[disabled] ~ .input-floating-label {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.input.input-filled.disabled,
    .input.input-filled:disabled,
    .input.input-filled[disabled] {
  border-bottom-width: 1px;
}

.input.input-filled.disabled ~ .input-filled-label, .input.input-filled:disabled ~ .input-filled-label, .input.input-filled[disabled] ~ .input-filled-label {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.input.input-filled.input-sm:not(:-moz-placeholder-shown) {
  padding-top: 0.5rem;
}

.input.input-filled.input-sm:focus,
  .input.input-filled.input-sm:not(:placeholder-shown) {
  padding-top: 0.5rem;
}

.input.input-filled:not(:-moz-placeholder-shown), .input.input-filled.input-lg:not(:-moz-placeholder-shown) {
  padding-top: 0.75rem;
}

.input.input-filled:focus,
  .input.input-filled.input-lg:focus,
  .input.input-filled:not(:placeholder-shown),
  .input.input-filled.input-lg:not(:placeholder-shown) {
  padding-top: 0.75rem;
}

.input-group .input {
  border-width: 0px;
  background-color: transparent;
}

.input-group .input:focus,
    .input-group .input:focus-within {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}

.input-group .input.disabled,
    .input-group .input:disabled,
    .input-group .input[disabled] {
  background-color: transparent;
}

.input-group-filled .input {
  border-width: 0px;
  background-color: transparent;
}

.input-group-filled .input.disabled,
    .input-group-filled .input:disabled,
    .input-group-filled .input[disabled] {
  background-color: transparent;
}

.input[type="file"].input-floating::file-selector-button {
  border-inline-end-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

.input.is-valid,
.validate .input:valid {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
}

.input.is-valid:focus,
  .input.is-valid:focus-within,
  .validate .input:valid:focus,
  .validate .input:valid:focus-within {
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1)));
}

.input.is-valid.input-filled:focus,
  .input.is-valid.input-filled:focus-within,
  .validate .input:valid.input-filled:focus,
  .validate .input:valid.input-filled:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}

.input.is-valid ~ .input-floating-label,
  .input.is-valid ~ .input-filled-label,
  .validate .input:valid ~ .input-floating-label,
  .validate .input:valid ~ .input-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.input.is-valid:focus ~ .input-filled-focused,
  .input.is-valid:focus-within ~ .input-filled-focused,
  .validate .input:valid:focus ~ .input-filled-focused,
  .validate .input:valid:focus-within ~ .input-filled-focused {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
}

.label:has(+ * .is-valid) > *, 
.label-text:has(+ * .is-valid), 
.label-text:has(~ .is-valid), 
.label:has(~ .is-valid) > *, 


.is-valid ~ .label, 
.is-valid ~ .label-text, 
.is-valid ~ .label .label-text,  
*:has(.is-valid) ~ .label, 
*:has(.is-valid) ~ .label-text, 
*:has(.is-valid) ~ .label .label-text, 



.validate .label:has(+ * .input:valid) > *, 
.validate .label-text:has(+ * .input:valid), 
.validate .label-text:has(~ .input:valid), 
.validate .label:has(~ .input:valid) > *, 


.validate .input:valid ~ .label, 
.validate .input:valid ~ .label.label-text, 
.validate .input:valid ~ .label .label-text,  
.validate *:has(.input:valid) ~ .label, 
.validate *:has(.input:valid) ~ .label-text, 
.validate *:has(.input:valid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.input:focus.is-valid ~ .input-floating-label,
.input:focus.is-valid ~ .input-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.input.is-invalid,
.validate .input:invalid {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
}

.input.is-invalid:focus,
  .input.is-invalid:focus-within,
  .validate .input:invalid:focus,
  .validate .input:invalid:focus-within {
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity, 1)));
}

.input.is-invalid.input-filled:focus,
  .input.is-invalid.input-filled:focus-within,
  .validate .input:invalid.input-filled:focus,
  .validate .input:invalid.input-filled:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}

.input.is-invalid ~ .input-floating-label,
  .input.is-invalid ~ .input-filled-label,
  .validate .input:invalid ~ .input-floating-label,
  .validate .input:invalid ~ .input-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.input.is-invalid:focus ~ .input-filled-focused,
  .input.is-invalid:focus-within ~ .input-filled-focused,
  .validate .input:invalid:focus ~ .input-filled-focused,
  .validate .input:invalid:focus-within ~ .input-filled-focused {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1)));
}

.label:has(+ * .is-invalid) > *, 
.label-text:has(+ * .is-invalid), 
.label-text:has(~ .is-invalid), 
.label:has(~ .is-invalid) > *, 


.is-invalid ~ .label, 
.is-invalid ~ .label-text, 
.is-invalid ~ .label .label-text,  
*:has(.is-invalid) ~ .label, 
*:has(.is-invalid) ~ .label-text, 
*:has(.is-invalid) ~ .label .label-text, 



.validate .label:has(+ * .input:invalid) > *, 
.validate .label-text:has(+ * .input:invalid), 
.validate .label-text:has(~ .input:invalid), 
.validate .label:has(~ .input:invalid) > *, 


.validate .input:invalid ~ .label, 
.validate .input:invalid ~ .label.label-text, 
.validate .input:invalid ~ .label .label-text,  
.validate *:has(.input:invalid) ~ .label, 
.validate *:has(.input:invalid) ~ .label-text, 
.validate *:has(.input:invalid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.input:focus.is-invalid ~ .input-floating-label,
.input:focus.is-invalid ~ .input-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.validate *:has(> .input:valid) ~ .success-message,
.validate *:has(> .input:valid)  > * > .success-message,

.validate .input:valid ~ .success-message,
.validate .input:valid  + * > .success-message {
  display: block;
}

.validate *:has(> .input:invalid) ~ .error-message,
.validate *:has(> .input:invalid) > * > .error-message,

.validate .input:invalid ~ .error-message,
.validate .input:invalid + * > .error-message {
  display: block;
}

.validate .input-group > .input:valid,
.input-group > .input:valid,
.validate .input-group > .input:invalid,
.input-group > .input:invalid,
.validate .input-group > * > .input:valid,
.input-group > * > .input:valid,
.validate .input-group > * > .input:invalid,
.input-group > * > .input:invalid,
.input-group > .input.is-valid,
.input-group > .input.is-invalid,
.input-group > * > .input.is-valid,
.input-group > * > .input.is-invalid {
  border-width: 0px;
}

.validate .input-group > .input:valid:focus-within,
.input-group > .input:valid:focus-within,
.validate .input-group > .input:invalid:focus-within,
.input-group > .input:invalid:focus-within,
.validate .input-group > * > .input:valid:focus-within,
.input-group > * > .input:valid:focus-within,
.validate .input-group > * > .input:invalid:focus-within,
.input-group > * > .input:invalid:focus-within,
.input-group > .input.is-valid:focus-within,
.input-group > .input.is-invalid:focus-within,
.input-group > * > .input.is-valid:focus-within,
.input-group > * > .input.is-invalid:focus-within {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.validate .input-group > .input:valid:focus,
.input-group > .input:valid:focus,
.validate .input-group > .input:invalid:focus,
.input-group > .input:invalid:focus,
.validate .input-group > * > .input:valid:focus,
.input-group > * > .input:valid:focus,
.validate .input-group > * > .input:invalid:focus,
.input-group > * > .input:invalid:focus,
.input-group > .input.is-valid:focus,
.input-group > .input.is-invalid:focus,
.input-group > * > .input.is-valid:focus,
.input-group > * > .input.is-invalid:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.input-group:has(.is-valid),
  .validate .input-group:has(.input:valid) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
}

.input-group:has(.is-valid):has(:focus),
    .input-group:has(.is-valid):has(:focus-within),
    .validate .input-group:has(.input:valid):has(:focus),
    .validate .input-group:has(.input:valid):has(:focus-within) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1)));
}

.input-group:has(.is-invalid),
  .validate .input-group:has(.input:invalid) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
}

.input-group:has(.is-invalid):has(:focus),
    .input-group:has(.is-invalid):has(:focus-within),
    .validate .input-group:has(.input:invalid):has(:focus),
    .validate .input-group:has(.input:invalid):has(:focus-within) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity, 1)));
}

.input-group-filled:has(.is-valid),
  .validate .input-group-filled:has(.input:valid) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
}

.input-group-filled:has(.is-valid):focus ~ .input-filled-focused,
    .input-group-filled:has(.is-valid):focus-within ~ .input-filled-focused,
    .validate .input-group-filled:has(.input:valid):focus ~ .input-filled-focused,
    .validate .input-group-filled:has(.input:valid):focus-within ~ .input-filled-focused {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
}

.input-group-filled:has(.is-invalid),
  .validate .input-group-filled:has(.input:invalid) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
}

.input-group-filled:has(.is-invalid):focus ~ .input-filled-focused,
    .input-group-filled:has(.is-invalid):focus-within ~ .input-filled-focused,
    .validate .input-group-filled:has(.input:invalid):focus ~ .input-filled-focused,
    .validate .input-group-filled:has(.input:invalid):focus-within ~ .input-filled-focused {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1)));
}

.join .btn {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.join > :where(*:not(:first-child)):is(.btn) {
  margin-inline-start: calc(var(--border-btn) * -1);
}

.link:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.link:focus-visible {
  outline: 2px solid currentColor;
  outline-offset: 2px;
}

.link.disabled,
  .link[disabled],
  .link:disabled {
  pointer-events: none;
  opacity: 0.4;
}

.loading {
  pointer-events: none;
  display: inline-block;
  aspect-ratio: 1 / 1;
  width: 1.5rem;
  background-color: currentColor;
  -webkit-mask-size: 100%;
          mask-size: 100%;
  -webkit-mask-repeat: no-repeat;
          mask-repeat: no-repeat;
  -webkit-mask-position: center;
          mask-position: center;
  -webkit-mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");
          mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");
}

:where(.menu li:empty) {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity, 1)));
  opacity: 0.1;
  margin: 0.5rem 1rem;
  height: 1px;
}

.menu :where(li:not(.dropdown) ul) {
  margin-inline-start: 1rem;
  padding-inline-start: 0.5rem;
}

.menu :where(li:not(.dropdown) ul):before {
  position: absolute;
  bottom: 0.6rem;
  inset-inline-start: 0px;
  top: 0.75rem;
  width: 1px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity, 1)));
  opacity: 0.1;
  content: "";
}

.menu :where(li:not(.menu-title, .tooltip) > *:not(ul, .collapse, .menu-title, .btn)) {
  border-radius: var(--rounded-btn, 0.375rem);
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
  text-align: start;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-duration: 200ms;
  text-wrap: balance;
}

.menu li.tooltip > * {
  border-radius: var(--rounded-btn, 0.375rem);
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
  text-align: start;
}

:where(.menu li:not(.menu-title, .disabled, [disabled], :disabled)) {
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

:where(.menu li:not(.menu-title, .disabled, [disabled], :disabled) > *:not(ul, .collapse, .menu-title)):not(.active, .btn).focus, :where(.menu li:not(.menu-title, .disabled, [disabled], :disabled) > *:not(ul, .collapse, .menu-title)):not(.active, .btn):focus, :where(.menu li:not(.menu-title, .disabled, [disabled], :disabled) > *:not(ul, .collapse, .menu-title)):not(.active, .btn):focus-visible {
  cursor: pointer;
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.menu li:not(.disabled, :disabled, [disabled]) > :not(ul, .menu-title, .collapse, .btn):active,
.menu li:not(.disabled, :disabled, [disabled]) > :not(ul, .menu-title, .collapse, .btn).active {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.menu li.disabled,
.menu li:disabled,
.menu li[disabled] {
  pointer-events: none;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  opacity: 0.5;
}

.mockup-phone .display {
  overflow: hidden;
  border-radius: 40px;
  margin-top: -25px;
}

.mockup-browser .mockup-browser-toolbar .input {
  position: relative;
  margin-left: auto;
  margin-right: auto;
  display: block;
  height: 1.75rem;
  width: 24rem;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  padding-inline-start: 2rem;
  padding-top: 0.125rem;
}

.mockup-browser .mockup-browser-toolbar .input:before {
  content: "";
  position: absolute;
  inset-inline-start: 0.5rem;
  top: 50%;
  aspect-ratio: 1 / 1;
  height: 0.75rem;
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  border-radius: 9999px;
  border-width: 2px;
  border-color: currentColor;
  opacity: 0.6;
}

.mockup-browser .mockup-browser-toolbar .input:after {
  content: "";
  position: absolute;
  inset-inline-start: 1.25rem;
  top: 50%;
  height: 0.5rem;
  --tw-translate-y: 25%;
  --tw-rotate: -45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  border-radius: 9999px;
  border-width: 1px;
  border-color: currentColor;
  opacity: 0.6;
}

.open.modal {
  transition-duration: 500ms;
}

.open .modal {
  transition-duration: 500ms;
}

.open.modal-dialog {
  transition-duration: 500ms;
}

.open .modal-dialog {
  transition-duration: 500ms;
}

@keyframes indeterminate-progress {
  0% {
    background-position-x: -75%;
  }

  50% {
    background-position-x: 125%;
  }

  100% {
    background-position-x: -75%;
  }
}

@keyframes progress-bar-stripes {
  0% {
    background-position-x: 0.75rem;
  }
}

@keyframes radiomark {
  0% {
    box-shadow: 0 0 0 9px var(--basebg) inset,
      0 0 0 9px var(--basebg) inset;
  }

  50% {
    box-shadow: 0 0 0 6px var(--basebg) inset,
      0 0 0 6px var(--basebg) inset;
  }

  100% {
    box-shadow: 0 0 0 3px var(--basebg) inset,
      0 0 0 3px var(--basebg) inset;
  }
}

@keyframes radioinsetmark {
  0% {
    border-width: 2px;
  }

  50% {
    border-width: 4px;
  }

  100% {
    border-width: 6px;
  }
}

@keyframes skeleton {
  from {
    background-position: 150%;
  }

  to {
    background-position: -50%;
  }
}

.table tr.active,
  .table tr.active:nth-child(even),
  .table-striped tbody tr:nth-child(even) {
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}

.table-striped tr.active,
    .table-striped tr.active:nth-child(even),
    .table-striped-striped tbody tr:nth-child(even) {
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}

textarea {
  background-color: transparent;
}

textarea:focus {
  outline-width: 0px;
  outline-color: transparent;
}

textarea:focus-visible {
  outline: unset;
}

.menu-horizontal > li:not(.menu-title) > .collapse > ul {
  position: absolute;
}

.menu-vertical > li:not(.menu-title) > .collapse > ul {
  position: relative;
}

:where(.card-compact ) .card-body {
  padding: 1rem;
}

:where(.card-compact ) .card-title {
  margin-bottom: 0.25rem;
}

:where(.card-compact:has(>.card-header)) > .card-body {
  padding-top: 0px;
}

:where(.card-compact:has(>.card-body)) > .card-footer {
  padding-top: 0px;
}

.menu-horizontal > li:not(.menu-title) > .collapse > ul {
  margin-inline-start: 0px;
  margin-top: 1rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  padding-inline-end: 0.5rem;
}

.menu-horizontal > li > .collapse > ul:before {
  content: none;
}

:where(.menu-horizontal > li:not(.menu-title) > .collapse > ul) {
  border-radius: var(--rounded-box, 0.5rem);
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  --tw-shadow: 0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));
  --tw-shadow-colored: 0 2px 4px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.menu-vertical > li:not(.menu-title) > .collapse > ul {
  margin-inline-start: 1rem;
  margin-top: 0px;
  padding-top: 0px;
  padding-bottom: 0px;
  padding-inline-end: 0px;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.collapse {
  visibility: collapse;
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.sticky {
  position: sticky;
}

.right-2 {
  right: 0.5rem;
}

.right-\[86\%\] {
  right: 86%;
}

.top-0 {
  top: 0px;
}

.top-12 {
  top: 3rem;
}

.top-14 {
  top: 3.5rem;
}

.top-16 {
  top: 4rem;
}

.top-2 {
  top: 0.5rem;
}

.bottom-3 {
  bottom: 0.75rem;
}

.end-0 {
  inset-inline-end: 0px;
}

.start-0 {
  inset-inline-start: 0px;
}

.z-30 {
  z-index: 30;
}

.z-50 {
  z-index: 50;
}

.z-\[100\] {
  z-index: 100;
}

.m-auto {
  margin: auto;
}

.mx-2 {
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}

.my-4 {
  margin-top: 1rem;
  margin-bottom: 1rem;
}

.mb-2\.5 {
  margin-bottom: 0.625rem;
}

.mb-3 {
  margin-bottom: 0.75rem;
}

.mb-4 {
  margin-bottom: 1rem;
}

.mb-5 {
  margin-bottom: 1.25rem;
}

.ms-3 {
  margin-inline-start: 0.75rem;
}

.ms-\[-1\.5px\] {
  margin-inline-start: -1.5px;
}

.mt-\[-16px\] {
  margin-top: -16px;
}

.flex {
  display: flex;
}

.inline-flex {
  display: inline-flex;
}

.grid {
  display: grid;
}

.hidden {
  display: none;
}

.size-5 {
  width: 1.25rem;
  height: 1.25rem;
}

.size-9\.5 {
  width: 2.375rem;
  height: 2.375rem;
}

.size-4 {
  width: 1rem;
  height: 1rem;
}

.h-80 {
  height: 20rem;
}

.h-full {
  height: 100%;
}

.min-h-\[100\%\] {
  min-height: 100%;
}

.min-h-\[400px\] {
  min-height: 400px;
}

.w-\[200px\] {
  width: 200px;
}

.w-full {
  width: 100%;
}

.min-w-\[100\%\] {
  min-width: 100%;
}

.min-w-60 {
  min-width: 15rem;
}

.max-w-\[1800px\] {
  max-width: 1800px;
}

.cursor-pointer {
  cursor: pointer;
}

.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}

.grid-rows-2 {
  grid-template-rows: repeat(2, minmax(0, 1fr));
}

.grid-rows-\[auto\] {
  grid-template-rows: auto;
}

.grid-rows-custom-rows {
  grid-template-rows: auto 1fr;
}

.flex-col {
  flex-direction: column;
}

.items-center {
  align-items: center;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.gap-0 {
  gap: 0px;
}

.gap-3 {
  gap: 0.75rem;
}

.gap-x-2 {
  -moz-column-gap: 0.5rem;
       column-gap: 0.5rem;
}

.gap-x-4 {
  -moz-column-gap: 1rem;
       column-gap: 1rem;
}

.self-center {
  align-self: center;
}

.overflow-hidden {
  overflow: hidden;
}

.overflow-x-scroll {
  overflow-x: scroll;
}

.rounded-2xl {
  border-radius: 1rem;
}

.rounded-3xl {
  border-radius: 1.5rem;
}

.rounded-lg {
  border-radius: 0.5rem;
}

.rounded-md {
  border-radius: 0.375rem;
}

.rounded-xl {
  border-radius: 0.75rem;
}

.rounded-full {
  border-radius: 9999px;
}

.rounded-t-2xl {
  border-top-left-radius: 1rem;
  border-top-right-radius: 1rem;
}

.border-2 {
  border-width: 2px;
}

.border-s-2 {
  border-inline-start-width: 2px;
}

.border-t-2 {
  border-top-width: 2px;
}

.border-solid {
  border-style: solid;
}

.border-\[\#00000052\] {
  border-color: #00000052;
}

.border-sky-400 {
  --tw-border-opacity: 1;
  border-color: rgb(56 189 248 / var(--tw-border-opacity, 1));
}

.border-slate-100 {
  --tw-border-opacity: 1;
  border-color: rgb(241 245 249 / var(--tw-border-opacity, 1));
}

.bg-sky-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(14 165 233 / var(--tw-bg-opacity, 1));
}

.bg-slate-200 {
  --tw-bg-opacity: 1;
  background-color: rgb(226 232 240 / var(--tw-bg-opacity, 1));
}

.bg-slate-400 {
  --tw-bg-opacity: 1;
  background-color: rgb(148 163 184 / var(--tw-bg-opacity, 1));
}

.bg-transparent {
  background-color: transparent;
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
}

.bg-base-100 {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

.bg-base-300 {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b3,oklch(var(--b3)/var(--tw-bg-opacity, 1)));
}

.bg-base-300\/60 {
  background-color: var(--fallback-b3,oklch(var(--b3)/0.6));
}

.bg-base-300\/80 {
  background-color: var(--fallback-b3,oklch(var(--b3)/0.8));
}

.p-2 {
  padding: 0.5rem;
}

.p-3 {
  padding: 0.75rem;
}

.p-4 {
  padding: 1rem;
}

.p-6 {
  padding: 1.5rem;
}

.px-1 {
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}

.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.px-5 {
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}

.px-8 {
  padding-left: 2rem;
  padding-right: 2rem;
}

.py-0 {
  padding-top: 0px;
  padding-bottom: 0px;
}

.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.py-3 {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

.pe-10 {
  padding-inline-end: 2.5rem;
}

.ps-3 {
  padding-inline-start: 0.75rem;
}

.align-middle {
  vertical-align: middle;
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-\[35px\] {
  font-size: 35px;
}

.text-text-mediam {
  font-size: 20px;
}

.text-text-small {
  font-size: 14px;
}

.font-light {
  font-weight: 300;
}

.font-medium {
  font-weight: 500;
}

.capitalize {
  text-transform: capitalize;
}

.text-black {
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity, 1));
}

.text-sky-300 {
  --tw-text-opacity: 1;
  color: rgb(125 211 252 / var(--tw-text-opacity, 1));
}

.text-sky-400 {
  --tw-text-opacity: 1;
  color: rgb(56 189 248 / var(--tw-text-opacity, 1));
}

.text-sky-500 {
  --tw-text-opacity: 1;
  color: rgb(14 165 233 / var(--tw-text-opacity, 1));
}

.text-slate-600 {
  --tw-text-opacity: 1;
  color: rgb(71 85 105 / var(--tw-text-opacity, 1));
}

.text-slate-700 {
  --tw-text-opacity: 1;
  color: rgb(51 65 85 / var(--tw-text-opacity, 1));
}

.text-slate-800 {
  --tw-text-opacity: 1;
  color: rgb(30 41 59 / var(--tw-text-opacity, 1));
}

.text-slate-900 {
  --tw-text-opacity: 1;
  color: rgb(15 23 42 / var(--tw-text-opacity, 1));
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity, 1));
}

.opacity-0 {
  opacity: 0;
}

.shadow-sm {
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow {
  --tw-shadow: 0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));
  --tw-shadow-colored: 0 2px 4px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-sky-500 {
  --tw-shadow-color: #0ea5e9;
  --tw-shadow: var(--tw-shadow-colored);
}

.shadow-slate-400 {
  --tw-shadow-color: #94a3b8;
  --tw-shadow: var(--tw-shadow-colored);
}

.outline-none {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-\[height\] {
  transition-property: height;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-300 {
  transition-duration: 300ms;
}

.duration-700 {
  transition-duration: 700ms;
}

.\[--auto-close\:inside\] {
  --auto-close: inside;
}

.defult_value > * {
  margin: 0px;
  box-sizing: border-box;
  list-style-type: none;
  padding: 0px;
  text-decoration-line: none;
}

.active {
  color: #38bdf8;
  border-left: 2px solid #38bdf8;
}

.mob-active {
  color: #38bdf8;
}

::-webkit-scrollbar {
  display: none;
}

.loader {
  position: relative;
  width: 100px;
  height: 100px;
}

.loader:before,
.loader:after {
  content: '';
  border-radius: 50%;
  position: absolute;
  inset: 0;
  box-shadow: 0 0 10px 2px rgba(0, 0, 0, 0.3) inset;
}

.loader:after {
  box-shadow: 0 2px 0 #38bdf8 inset;
  animation: rotate 1.5s linear infinite;
}

@keyframes rotate {
  0% {
    transform: rotate(0);
  }

  100% {
    transform: rotate(360deg);
  }
}

.hover\:bg-sky-400:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(56 189 248 / var(--tw-bg-opacity, 1));
}

.hover\:bg-slate-50:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(248 250 252 / var(--tw-bg-opacity, 1));
}

.focus\:w-\[350px\]:focus {
  width: 350px;
}

.dropdown.open > .dropdown-open\:rotate-180 {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.dropdown.open > .dropdown-open\:opacity-100 {
  opacity: 1;
}

.dropdown.open > .dropdown-toggle .dropdown-open\:rotate-180 {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.dropdown.open > .dropdown-toggle .dropdown-open\:opacity-100 {
  opacity: 1;
}

.dropdown.open > .dropdown-menu > .dropdown-open\:rotate-180 {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.dropdown.open > .dropdown-menu > .dropdown-open\:opacity-100 {
  opacity: 1;
}

.dropdown-menu.open.dropdown-open\:rotate-180 {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.dropdown-menu.open.dropdown-open\:opacity-100 {
  opacity: 1;
}

.collapse.open > .collapse-open\:rotate-180 {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.collapse.open.collapse-open\:rotate-180 {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.collapse-toggle.open > .collapse-open\:rotate-180 {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.collapse-toggle.open.collapse-open\:rotate-180 {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.dark\:border-slate-700:is(.dark *) {
  --tw-border-opacity: 1;
  border-color: rgb(51 65 85 / var(--tw-border-opacity, 1));
}

.dark\:border-white:is(.dark *) {
  --tw-border-opacity: 1;
  border-color: rgb(255 255 255 / var(--tw-border-opacity, 1));
}

.dark\:bg-slate-900:is(.dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(15 23 42 / var(--tw-bg-opacity, 1));
}

.dark\:bg-slate-950:is(.dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(2 6 23 / var(--tw-bg-opacity, 1));
}

.dark\:text-white:is(.dark *) {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity, 1));
}

@media (min-width: 640px) {
  .sm\:mx-3 {
    margin-left: 0.75rem;
    margin-right: 0.75rem;
  }

  .sm\:block {
    display: block;
  }

  .sm\:max-w-sm {
    max-width: 24rem;
  }

  .sm\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .sm\:p-2 {
    padding: 0.5rem;
  }

  .sm\:py-0 {
    padding-top: 0px;
    padding-bottom: 0px;
  }

  .sm\:py-1 {
    padding-top: 0.25rem;
    padding-bottom: 0.25rem;
  }

  .sm\:text-\[15px\] {
    font-size: 15px;
  }

  .sm\:text-text-normal {
    font-size: 16px;
  }

  .sm\:text-text-small {
    font-size: 14px;
  }

  .sm\:text-4xl {
    font-size: 2.25rem;
    line-height: 2.5rem;
  }
}

@media (min-width: 768px) {
  .md\:grid {
    display: grid;
  }

  .md\:hidden {
    display: none;
  }

  .md\:grid-cols-\[1fr_auto\] {
    grid-template-columns: 1fr auto;
  }

  .md\:grid-cols-\[1fr_auto_auto\] {
    grid-template-columns: 1fr auto auto;
  }

  .md\:grid-cols-\[1fr_auto_1fr\] {
    grid-template-columns: 1fr auto 1fr;
  }

  .md\:gap-4 {
    gap: 1rem;
  }

  .md\:gap-x-5 {
    -moz-column-gap: 1.25rem;
         column-gap: 1.25rem;
  }

  .md\:border-r-2 {
    border-right-width: 2px;
  }
}

@media (min-width: 1024px) {
  .lg\:relative {
    position: relative;
  }

  .lg\:block {
    display: block;
  }

  .lg\:hidden {
    display: none;
  }

  .lg\:grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }

  .lg\:grid-cols-custom {
    grid-template-columns: 15% 85%;
  }

  .lg\:border-solid {
    border-style: solid;
  }

  .lg\:border-sky-200 {
    --tw-border-opacity: 1;
    border-color: rgb(186 230 253 / var(--tw-border-opacity, 1));
  }

  .lg\:pt-2 {
    padding-top: 0.5rem;
  }

  .lg\:text-\[17px\] {
    font-size: 17px;
  }

  .lg\:text-\[18px\] {
    font-size: 18px;
  }

  .lg\:text-text-mediam {
    font-size: 20px;
  }
}

.rtl\:rotate-180:where([dir="rtl"], [dir="rtl"] *) {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.rtl\:\[--placement\:bottom-end\]:where([dir="rtl"], [dir="rtl"] *) {
  --placement: bottom-end;
}
